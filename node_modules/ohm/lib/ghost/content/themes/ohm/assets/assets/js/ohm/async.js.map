{"version":3,"sources":["../../../../client/js/ohm/async.js"],"names":["module","exports","load","name","onLoad","injectScript","src","s","t","document","createElement","type","async","getElementsByTagName","parentNode","insertBefore","formatUrl","id","paramRegex","url","param","replace","test","indexOf","Date","now","window"],"mappings":";;AAAA,CAAC,YAAW;AACV;AACD;;;;;;;AAMCA,SAAOC,OAAP,GAAiB;AACfC,UAAM,cAASC,IAAT,EAAeC,MAAf,EAAuB;AAC3B,eAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,YAAIC,CAAJ,EAAOC,CAAP;AACAD,YAAIE,SAASC,aAAT,CAAuB,QAAvB,CAAJ;AACAH,UAAEI,IAAF,GAAS,iBAAT;AACAJ,UAAEK,KAAF,GAAU,IAAV;AACAL,UAAED,GAAF,GAAQA,GAAR;AACAE,YAAIC,SAASI,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,CAAJ;AACAL,UAAEM,UAAF,CAAaC,YAAb,CAA0BR,CAA1B,EAA4BC,CAA5B;AACD;;AAED,eAASQ,SAAT,CAAmBb,IAAnB,EAAyBc,EAAzB,EAA6B;AAC3B,YAAIC,UAAJ,EAAgBC,GAAhB,EAAqBC,KAArB;AACAF,qBAAa,OAAb;AACAC,cAAMhB,KAAKkB,OAAL,CAAaH,UAAb,EAAyB,EAAzB,CAAN;AACA;AACAE,gBAASF,WAAWI,IAAX,CAAgBnB,IAAhB,CAAD,GAAyBA,KAAKkB,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAzB,GAAmD,UAA3D;AACAF,eAAQA,IAAII,OAAJ,CAAY,GAAZ,IAAmB,CAApB,GAAwB,GAAxB,GAA8B,GAArC;AACA,eAAOJ,MAAMC,KAAN,GAAa,GAAb,GAAkBH,EAAzB;AACD;;AAED,UAAIA,KAAK,sBAAqBO,KAAKC,GAAL,EAA9B;AACA;AACA;AACAC,aAAOT,EAAP,IAAab,MAAb;AACAC,mBAAaW,UAAUb,IAAV,EAAgBc,EAAhB,CAAb;AAED;AA5Bc,GAAjB;AA+BD,CAvCD","file":"async.js","sourcesContent":["(function() {\n  'use strict';\n /*!\n  * RequireJS plugin for async dependency load like JSONP and Google Maps\n  * @author Miller Medeiros\n  * @version 0.0.1 (2011/03/23)\n  * Released under the MIT License <http://www.opensource.org/licenses/mit-license.php>\n  */\n  module.exports = {\n    load: function(name, onLoad) {\n      function injectScript(src) {\n        var s, t;\n        s = document.createElement('script');\n        s.type = 'text/javascript';\n        s.async = true;\n        s.src = src;\n        t = document.getElementsByTagName('script')[0];\n        t.parentNode.insertBefore(s,t);\n      }\n\n      function formatUrl(name, id) {\n        var paramRegex, url, param;\n        paramRegex = /!(.+)/;\n        url = name.replace(paramRegex, '');\n        // default param name is 'callback'\n        param = (paramRegex.test(name))? name.replace(/.+!/, '') : 'callback';\n        url += (url.indexOf('?') < 0)? '?' : '&';\n        return url + param +'='+ id;\n      }\n\n      var id = '__mm_asynch_req__'+ Date.now();\n      // create a global variable that stores onLoad so callback\n      // function can define new module after async load\n      window[id] = onLoad;\n      injectScript(formatUrl(name, id));\n\n    }\n  };\n\n})();"]}