{"version":3,"sources":["../../../../client/js/ohm/utils.js"],"names":["Element","prototype","hasClassName","a","RegExp","test","className","addClassName","join","removeClassName","b","replace","toggleClassName","isMobile","distance","dev","navigator","userAgent","handleError","msg","document","getElementById","style","display","innerHTML","setTimeout","window","location","origin","indexOf"],"mappings":";;AAAC,aAAY;AACX;AACA;;;;;AAKAA,UAAQC,SAAR,CAAkBC,YAAlB,GAAiC,UAASC,CAAT,EAAY;AAC3C,WAAO,IAAIC,MAAJ,CAAW,eAAeD,CAAf,GAAmB,YAA9B,EAA4CE,IAA5C,CAAiD,KAAKC,SAAtD,CAAP;AACD,GAFD;AAGA;;;AAGAN,UAAQC,SAAR,CAAkBM,YAAlB,GAAiC,UAASJ,CAAT,EAAY;AAC3C,QAAI,CAAC,KAAKD,YAAL,CAAkBC,CAAlB,CAAL,EAA2B;AACzB,WAAKG,SAAL,GAAiB,CAAC,KAAKA,SAAN,EAAiBH,CAAjB,EAAoBK,IAApB,CAAyB,GAAzB,CAAjB;AACD;AACF,GAJD;AAKA;;;AAGAR,UAAQC,SAAR,CAAkBQ,eAAlB,GAAoC,UAASC,CAAT,EAAY;AAC9C,QAAI,KAAKR,YAAL,CAAkBQ,CAAlB,CAAJ,EAA0B;AACxB,UAAIP,IAAI,KAAKG,SAAb;AACA,WAAKA,SAAL,GAAiBH,EAAEQ,OAAF,CAAU,IAAIP,MAAJ,CAAW,eAAeM,CAAf,GAAmB,YAA9B,EAA4C,GAA5C,CAAV,EAA4D,GAA5D,CAAjB;AACD;AACF,GALD;AAMA;;;AAGAV,UAAQC,SAAR,CAAkBW,eAAlB,GAAoC,UAAST,CAAT,EAAY;AAC9C,SAAK,KAAKD,YAAL,CAAkBC,CAAlB,IAAuB,iBAAvB,GAA2C,cAAhD,EAAgEA,CAAhE;AACD,GAFD;;AAIA,MAAIU,QAAJ,EAAcC,QAAd,EAAwBC,GAAxB;AACA;;;AAGAF,aAAW,iEAAiER,IAAjE,CAAsEW,UAAUC,SAAhF,IAA6F,IAA7F,GAAoG,KAA/G;AACA;;;;;AAKA,WAASC,WAAT,CAAqBC,GAArB,EAA0B;AACxB,QAAIC,SAASC,cAAT,CAAwB,uBAAxB,CAAJ,EAAsD;AACpDD,eAASC,cAAT,CAAwB,uBAAxB,EAAiDC,KAAjD,CAAuDC,OAAvD,GAAiE,OAAjE;AACAH,eAASC,cAAT,CAAwB,eAAxB,EAAyCG,SAAzC,GAAqDL,GAArD;AACAM,iBAAW,YAAW;AACpBL,iBAASC,cAAT,CAAwB,uBAAxB,EAAiDC,KAAjD,CAAuDC,OAAvD,GAAiE,MAAjE;AACD,OAFD,EAEG,IAFH;AAGD;AACF;AACD;;;AAGAR,QAAMW,OAAOC,QAAP,CAAgBC,MAAhB,CAAuBC,OAAvB,CAA+B,MAA/B,MAA2C,CAAC,CAA5C,GAAgD,IAAhD,GAAuD,KAA7D;AACA,MAAId,GAAJ,EAAS;AACPG,gBAAY,kBAAZ;AACD;AACDJ,aAAWD,WAAW,KAAX,GAAmB,KAA9B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGD,CApKA,GAAD","file":"utils.js","sourcesContent":["(function () {\n  'use strict';\n  /** \n   * DOM Utility Functions\n   * Vanilla javascript implementation of class manipulation\n   */\n\n  Element.prototype.hasClassName = function(a) {\n    return new RegExp(\"(?:^|\\\\s+)\" + a + \"(?:\\\\s+|$)\").test(this.className);\n  };\n  /** \n   * Add Class Name\n   */\n  Element.prototype.addClassName = function(a) {\n    if (!this.hasClassName(a)) {\n      this.className = [this.className, a].join(\" \");\n    }\n  };\n  /** \n   * Remove Class Name\n   */\n  Element.prototype.removeClassName = function(b) {\n    if (this.hasClassName(b)) {\n      var a = this.className;\n      this.className = a.replace(new RegExp(\"(?:^|\\\\s+)\" + b + \"(?:\\\\s+|$)\", \"g\"), \" \");\n    }\n  };\n  /** \n   * Toggle Class Name\n   */\n  Element.prototype.toggleClassName = function(a) {\n    this[this.hasClassName(a) ? \"removeClassName\" : \"addClassName\"](a);\n  };\n\n  var isMobile, distance, dev;\n  /** \n   * Mobile Device Detection\n   */\n  isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ? true : false;\n  /**\n   * Display message onscreen\n   * @param {string} msg the message to be displayed\n   */\n\n  function handleError(msg) {\n    if (document.getElementById('general-error-wrapper')) {\n      document.getElementById('general-error-wrapper').style.display = \"block\";\n      document.getElementById('general-error').innerHTML = msg;\n      setTimeout(function() {\n        document.getElementById('general-error-wrapper').style.display = \"none\";\n      }, 2500);\n    }\n  }\n  /**\n   * Check for dev environment\n   */\n  dev = window.location.origin.indexOf(\"8888\") !== -1 ? true : false;\n  if (dev) {\n    handleError(\"development mode\");\n  }\n  distance = isMobile ? \"70%\" : \"30%\";\n  /*\n  ///////////////////////////////////////\n  //  TEXT                            //\n  /////////////////////////////////////\n  function truncate(str)\n  {\n    if (str.length > 200){\n      var pos = 180,\n      // Search for the word's beginning and end.\n      right = str.slice(pos).search(/\\s/);\n      return str.substring(0, pos + right)+'<span class=\"link read-less\" style=\"display:none;\">less</span><span style=\"display:inline;\"class=\"link read-more\">... more</span>';\n    } else {\n      return str;\n    }\n  }\n  ///////////////////////////////////////\n  //  FORMS                           //\n  /////////////////////////////////////\n  function form_as_object(form)\n  {\n    var object = {};\n    var split = (form.serialize()).split('&');\n    for (var i in split)\n    {\n      var key_value = split[i].split('=');\n      object[key_value[0]] = key_value[1];\n    }\n    return object;\n  }\n  ///////////////////////////////////////\n  //  COUNTDOWN                       //\n  /////////////////////////////////////\n  function countdown(deadline, id)\n  {\n    // set the date we're counting down to\n    var target_date = new Date(deadline).getTime();\n    calculateCountdown(target_date, id);\n\n    // update the tag with id \"countdown\" every 1 second\n    setInterval(function () {\n      calculateCountdown(target_date, id);\n    }, 1000 * 60);\n  }\n  function calculateCountdown(target_date, id) {\n    // variables for time units\n    var days, hours, minutes, seconds;\n\n    // find the amount of \"seconds\" between now and target\n    var current_date = new Date().getTime();\n    var seconds_left = (target_date - current_date) / 1000;\n\n    // do some time calculations\n    days = padInt(parseInt(seconds_left / 86400));\n    seconds_left = seconds_left % 86400;\n\n    hours = padInt(parseInt(seconds_left / 3600));\n    seconds_left = seconds_left % 3600;\n\n    minutes = padInt(parseInt(seconds_left / 60));\n    seconds = padInt(parseInt(seconds_left % 60));\n\n    // format countdown string + set tag value\n    $('#countdown-days-'+id).html(days);\n    $('#countdown-hours-'+id).html(hours);\n    $('#countdown-minutes-'+id).html(minutes);\n  }\n  function padInt(n) {\n    return (n < 10) ? (\"0\" + n) : n;\n  }\n  ///////////////////////////////////////\n  //  Horizontal Pan Arrows           //\n  /////////////////////////////////////\n  function panArrows()\n  {\n    var scrollHandle = 0,\n        scrollStep = 5,\n        parent = $(\".scrolls\");\n    //Start the scrolling process\n    $(\".panner\").on(\"mouseenter\", function () {\n      var data = $(this).data('scrollModifier'), direction = parseInt(data, 10);\n      $(this).addClass('active');\n      startScrolling(direction, scrollStep);\n    });\n    //Kill the scrolling\n    $(\".panner\").on(\"mouseleave\", function () {\n      stopScrolling();\n      $(this).removeClass('active');\n    });\n    //Actual handling of the scrolling\n    function startScrolling(modifier, step) {\n      if (scrollHandle === 0) {\n        scrollHandle = setInterval(function () {\n          var newOffset = parent.scrollLeft() + (scrollStep * modifier);\n          parent.scrollLeft(newOffset);\n        }, 10);\n      }\n    }\n    function stopScrolling() {\n      clearInterval(scrollHandle);\n      scrollHandle = 0;\n    }\n  }\n  */\n}());\n"]}