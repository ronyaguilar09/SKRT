{"version":3,"sources":["../../../../client/js/ohm/GMapper.react.js"],"names":["_","require","React","ReactDOM","async","BroadcastMap","createClass","getInitialState","userLocation","nearbyBroadcasts","componentDidMount","load","_googleMapApiCallback","navigator","geolocation","getCurrentPosition","pos","setState","coords","_drawGoogleMap","bind","_genGoogleMapLatLng","markerData","google","maps","LatLng","latitude","longitude","_makeMapListener","window","map","content","marker","setContent","open","mapOptions","gMap","mapStyles","styledMap","infowindow","StyledMapType","name","props","mapName","center","state","zoom","mapTypeId","mapType","MapTypeId","ROADMAP","scrollwheel","mapTypeControlOptions","mapTypeIds","Map","refs","mapTypes","set","setMapTypeId","InfoWindow","maxWidth","_addBroadcastLocations","tooltip","each","broadcast","googlePlacesReference","_getGoogleDetails","data","_tooltip","_addBroadcastGoogleMapTooltip","tooltipContent","icon","location","latLng","markerOpts","position","title","channelName","animation","Animation","DROP","url","anchor","Point","size","Size","place","placeId","lat","lng","attribution","source","webUrl","Marker","event","addListener","setMap","id","callback","request","service","places","PlacesService","getDetails","details","status","address","formatted_address","rating","phone","formatted_phone_number","website","replace","more","classes","objectId","description","renderToString","render","module","exports"],"mappings":"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","file":"GMapper.react.js","sourcesContent":["(function() {\n    'use strict';\n    /**\n     * Broadcast Map\n     * Display Nearby Braodcasts to the User via Google Maps\n     * @module BroadcastMap\n     */\n    const _            = require('underscore');\n    const React        = require('react');\n    const ReactDOM     = require('react-dom');\n    const async        = require('./async.js');\n    const BroadcastMap = React.createClass({\n\n      getInitialState: function() {\n        return {\n          userLocation: {},\n          // FIXME remove these\n          nearbyBroadcasts: [{\n            \"name\": \"Title\",\n            \"position\": \"Subtitle\",\n            \"url\": \"http://ohm.fm\",\n            \"description\": \"Description\",\n            \"icon\": \"http://drake.fm/img/apple-touch-icon-precomposed.png\",\n            \"latLng\": {\n              \"__type\": \"GeoPoint\",\n              \"latitude\": 37.429856,\n              \"longitude\": -122.169470\n            },\n            \"objectId\": \"rL2aub1TOi\"\n          }]\n        };\n      },\n\n      componentDidMount: function() {\n        // TODO add listener for locations response\n        // TODO remove google maps api key\n        async.load(\n          'https://maps.google.com/maps/api/js?key=OHMTEST&v=3&signed_in=true&libraries=places!callback',\n          this._googleMapApiCallback\n        );\n      },\n\n      /**\n       * The callback for the Google Map async request. This\n       * fetches the nearby locations from Parse, resets the state,\n       * and then adds the markers to the Google Map.\n       */\n      _googleMapApiCallback: function() {\n        if (navigator) {\n          navigator.geolocation.getCurrentPosition(function(pos) {\n            this.setState({\n              userLocation: pos.coords\n            });\n            this._drawGoogleMap();\n          }.bind(this));\n        } else {\n          // TODO map anyway\n        }\n      },\n\n      /**\n       * Generates a Google Map LatLng object.\n       */\n      _genGoogleMapLatLng: function(markerData) {\n        return markerData ? new google.maps.LatLng(markerData.latitude, markerData.longitude) : null;\n      },\n\n      /**\n       * Helper functional to make rendering Google Map markers easier\n       */\n      _makeMapListener: function(window, map, content, marker) {\n        return function() {\n          window.setContent(content);\n          window.open(map, this);\n        };\n      },\n\n      /**\n       * Begins rendering of Javascript version of Google Map\n       */\n      _drawGoogleMap: function() {\n        var mapOptions, gMap, mapStyles, styledMap, infowindow;\n\n        styledMap = new google.maps.StyledMapType([{\n          \"featureType\": \"water\",\n          \"stylers\": [{\n            \"color\": \"#eeeeee\"\n          }]\n        }, {\n          \"featureType\": \"landscape.man_made\",\n          \"stylers\": [{\n            \"color\": \"#666\"\n          }]\n        }, {\n          \"featureType\": \"landscape\",\n          \"stylers\": [{\n            \"color\": \"#ffffff\"\n          }]\n        }, {\n          \"featureType\": \"poi.park\",\n          \"stylers\": [{\n            \"saturation\": -100\n          }]\n        }, {\n          \"elementType\": \"labels.text\",\n          \"stylers\": [{\n            \"hue\": \"#ff0022\"\n          }, {\n            \"color\": \"#000000\"\n          }]\n        }, {\n          \"elementType\": \"labels.text.stroke\",\n          \"stylers\": [{\n            \"weight\": 0.1\n          }]\n        }, {}, {\n          \"elementType\": \"geometry.stroke\",\n          \"stylers\": [{\n            \"weight\": 1.5\n          }, {\n            \"color\": \"#cccccc\"\n          }]\n        }, {\n          \"featureType\": \"road.local\",\n          \"stylers\": [{\n            \"color\": \"#666666\"\n          }]\n        }, {\n          \"featureType\": \"poi\",\n          \"stylers\": [{\n            \"color\": \"#cccccc\"\n          }]\n        }, {\n          \"featureType\": \"road.highway.controlled_access\",\n          \"elementType\": \"labels.icon\",\n          \"stylers\": [{\n            \"saturation\": -100\n          }]\n        }, {\n          \"featureType\": \"road.highway\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [{\n            \"saturation\": -100\n          }]\n        }], {\n          name: this.props.mapName\n        });\n\n        mapOptions = {\n          center: this._genGoogleMapLatLng(this.state.userLocation),\n          zoom: this.props.zoom,\n          mapTypeId: this.props.mapType || google.maps.MapTypeId.ROADMAP,\n          scrollwheel: this.props.scrollwheel,\n          mapTypeControlOptions: {\n            mapTypeIds: [(this.props.mapType || google.maps.MapTypeId.ROADMAP), 'map_style']\n          }\n        };\n\n        gMap = new google.maps.Map(this.refs.map, mapOptions);\n        //Associate the styled map with the MapTypeId and set it to display.\n        gMap.mapTypes.set('map_style', styledMap);\n        gMap.setMapTypeId('map_style');\n        // initialize infoWindow\n        infowindow = new google.maps.InfoWindow({\n          maxWidth: 300\n        });\n        //      !data.lng || !data.lat ? center = new google.maps.LatLng(37.429856, -122.169425) : center = new google.maps.LatLng(data.lat, data.lng);\n        this._addBroadcastLocations(gMap, infowindow);\n      },\n\n      /**\n       * Adds a broadcast icon to Google Map for each nearby broadcast\n       */\n      _addBroadcastLocations: function(gMap, infowindow) {\n        var tooltip;\n        // FIXME: just render an empty map if there are no locations\n        _.each(this.state.nearbyBroadcasts, function(broadcast) {\n          if (broadcast.googlePlacesReference) {\n            this._getGoogleDetails(broadcast.googlePlacesReference, gMap, function(broadcast, data) {\n              broadcast.google = data;\n              tooltip          = this._tooltip(broadcast);\n              this._addBroadcastGoogleMapTooltip(gMap, broadcast, tooltip, infowindow);\n            }.bind(this, broadcast));\n          } else {\n            // FIXME: this uses a renderTostring method that is deprecated\n            // var tooltip = this._tooltip(broadcast);\n            this._addBroadcastGoogleMapTooltip(gMap, broadcast, null, infowindow);\n          }\n        }.bind(this));\n      },\n\n      /**\n       * Adds the icons and details (generated by clicks) for broadcasts\n       * close to the users current location.\n       */\n      _addBroadcastGoogleMapTooltip: function(gMap, broadcast, tooltipContent, infowindow) {\n        var marker, icon;\n\n        broadcast.location = broadcast.latLng;\n\n        var markerOpts = {\n          position: this._genGoogleMapLatLng(broadcast.location),\n          location: broadcast.location,\n          title: broadcast.channelName,\n          animation: google.maps.Animation.DROP,\n          map: gMap,\n          url: broadcast.url\n        };\n        if (broadcast.icon) {\n          markerOpts.icon = {\n            url: broadcast.icon || 'img/small-record.png',\n            anchor: new google.maps.Point(20, 20),\n          };\n          if (broadcast.size) {\n            markerOpts.icon.size = new google.maps.Size(40, 40);\n          }\n          \n        }\n        if (broadcast.googlePlacesReference) {\n          markerOpts.place = {\n            placeId: broadcast.googlePlacesReference,\n            location: {\n              lat: broadcast.location.latitude,\n              lng: broadcast.location.longitude\n            }\n          };\n          markerOpts.attribution = {\n            source: broadcast.title,\n            webUrl: broadcast.url\n          };\n        }\n        marker = new google.maps.Marker(markerOpts);\n\n        google.maps.event.addListener(\n          marker,\n          'click',\n          this._makeMapListener(infowindow, gMap, tooltipContent, marker)\n        );\n        marker.setMap(gMap);\n      },\n\n      /**\n       * Get Details for Google Place.\n       * @param {object} data The details for the location\n       * @param {object} marker The Google Maps Marker\n       * @param {object} map The Google Map\n       */\n      _getGoogleDetails: function(id, map, callback) {\n        if (!id) {\n          return;\n        }\n        var request = {\n          placeId: id\n        };\n        var service = new google.maps.places.PlacesService(map);\n        service.getDetails(request, function(callback, details, status) {\n          if (details) {\n            return callback(details);\n          } else {\n            return;\n          }\n        }.bind(this, callback));\n      },\n\n      _tooltip: function(broadcast) {\n        var address   = broadcast.google ? broadcast.google.formatted_address : null;\n        var rating    = broadcast.google ? broadcast.google.rating : null;\n        var phone     = broadcast.google ? broadcast.google.formatted_phone_number : null;\n        var website   = broadcast.google ? broadcast.google.website.replace(/.*?:\\/\\//g, \"\") : null;\n        var more      = broadcast.google ? (<a className=\"glyphicon glyphicon-link\" href={broadcast.google.url} target=\"_blank\"></a>) : null;\n        var classes   = broadcast.google ? \"infowindow-google infowindow\" : \"infowindow\";\n\n        var tooltip = (\n          <div className={classes}>\n            <a href={\"/station/\" + broadcast.objectId}>\n              <p className=\"name\">{broadcast.channelName}</p>\n            </a>\n            <p className=\"address\">{address}</p>\n            <a href={website} target=\"_blank\"><p className=\"website\">{website}</p></a>\n            <p className=\"phone\">{phone}</p>\n            <p className=\"rating\">{rating}</p>\n            <p className=\"description\">\n              {broadcast.description}\n            </p>\n            {more}\n          </div>\n        );\n\n        tooltip = React.renderToString(tooltip);\n        return tooltip;\n      },\n\n      render: function () {\n        return (\n          <div>\n            <div ref=\"map\" className=\"canvasMap\"></div>\n          </div>\n        );\n      }\n  });\n\n  module.exports = BroadcastMap;\n}());\n"]}